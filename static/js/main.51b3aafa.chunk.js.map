{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","status","setStatus","resetQuery","onQueryChange","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","currentUser","setCurrentUser","useEffect","userId","user","href","email","name","App","visibleTodos","setVisibleTodos","setQuery","filteredTodos","useMemo","filter","filteredByQuery","toLowerCase","includes","useCallback","reset","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51b3aafa.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far', {\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  resetQuery: () => void;\n  status: string;\n  setStatus: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  status,\n  setStatus,\n  resetQuery,\n  onQueryChange,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedTodo: Todo;\n  setSelectedTodo: (value: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then((user) => setCurrentUser(user));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useMemo, useEffect, useState, useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  useEffect(() => {\n    getTodos().then((todos) => setVisibleTodos(todos));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return visibleTodos.filter((todo) => {\n      const filteredByQuery = todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase());\n\n      switch (status) {\n        case 'active':\n          return !todo.completed && filteredByQuery;\n\n        case 'completed':\n          return todo.completed && filteredByQuery;\n\n        case 'all':\n        default:\n          return filteredByQuery;\n      }\n    });\n  }, [status, visibleTodos, query]);\n\n  const onQueryChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setQuery(event.target.value);\n    },\n    [],\n  );\n\n  const reset = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={onQueryChange}\n                resetQuery={reset}\n                status={status}\n                setStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}